## 문제 16. 직원중에서 급여가 가장 높은 사람이
## CEO 라고 합니다. 이름이 무엇입니까?
## apply(object, direction, function to apply)
## 적용방향 -> 1:가로방향, 2: 세로방향
apply(emp %>% select(연봉),2,max)
emp%>%
dplyr::filter(연봉==k)
k<-apply(emp %>% select(연봉),2,max)
emp%>%
dplyr::filter(연봉==k)
k<-apply(emp %>% select(연봉),2,max)
emp%>%
dplyr::filter(연봉==k) %>%
dplyr::select(이름)
k
View(empd)
emp %>%
dplyr::filter(연봉>10000)%>%
dplyr::select(이름,연봉,dep$부서명)
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::filter(연봉>=10000) %>%
dplyr::select(부서명,이름,연봉) %>%
dplyr::arrange(desc(연봉))
q<-emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::filter(연봉>=10000) %>%
dplyr::select(부서명,이름,연봉) %>%
dplyr::arrange(desc(연봉))
View(q)
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::filter(연봉>=10000) %>%
dplyr::select(부서명,이름,연봉) %>%
dplyr::arrange(desc(연봉)))
#### [문제 18]
#### 연봉이 12000 이 넘는 직원의 부서명,이름,연봉,직책
#### 을 기재하시오.
######################################################
View(job)
View(job)
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(job,by='부서아이디') %>%
dplyr::select(부서명,이름,연봉,업무명) %>%
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(job,by='부서아이디') %>%
dplyr::select(부서명,이름,연봉,업무명)
View(job)
View(emp)
View(dep)
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(job,by='업무아이디') %>%
dplyr::select(부서명,이름,연봉,업무명)
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(job,by='업무아이디') %>%
dplyr::select(부서명,이름,연봉,업무명) )
View(emp %>%
dplyr::right_join(dep,by='부서아이디') %>%
dplyr::right_join(job,by='업무아이디') %>%
dplyr::select(부서명,이름,연봉,업무명) )
str(emp)
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(job,by='업무아이디') %>%
dplyr::filter(연봉>=12000) %>%
dplyr::select(부서명,이름,연봉,업무명) )
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(job,by='업무아이디') %>%
dplyr::filter(연봉>=12000) %>%
dplyr::select(부서명,이름,연봉,업무명) ) %>%
dplyr::arrange(desc(연봉))
emp %>%
dplyr::left_join(dep,by='부서아이디')
######################################################
#######################################################
#### [문제 19]
#### 부서명 별로 연봉 평균을 구하시오
##group_by
View(emp %>%
dplyr::left_join(dep,by='부서아이디') )
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉)) %>%
dplyr::arrange(desc(연봉평균))
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉)) %>%
dplyr::arrange(desc(연봉평균)))
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::mutate(연봉평균=mean(연봉)) %>%
dplyr::arrange(desc(연봉평균)))
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉)) %>% #mutate는 개별자료만, summarise는 group_by와 함께
dplyr::arrange(desc(연봉평균)))
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>% #mutate는 개별자료만, summarise는 group_by와 함께
dplyr::arrange(desc(연봉평균)))
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>% #mutate는 개별자료만, summarise는 group_by와 함께
dplyr::arrange(desc(연봉평균)))
View(q)
View(empd)
emp %>%
dplyr::row_number(부서아이디)
######################################################
#######################################################
#### [문제 20]
#### 이 회사의 부서 수를 기재하시오.
dep %>%
dplyr::distinct(부서명) %>%
count
View(loc)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=count(부서아이디)) %>%
dplyr::select(부서명,도시,부서별사원수,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디'))
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::summarise(부서별사원수=length(직원아이디)) %>%
dplyr::select(부서명,도시,연봉평균)
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명)
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명,부서아이디))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명,부서아이디)%>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)))
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디))
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명,부서아이디)%>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T))
dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디'))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명)
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디')%>%
dplyr::group_by(부서명))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::group_by(부서명))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::group_by(부서명))%>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::group_by(부서명))%>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T))
View(dep %>%
dplyr::left_join(emp,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디))%>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T))
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T))
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T)) %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::select(부서명,도시,연봉평균)
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
head
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>% )
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
head()
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
head
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서아이디) %>%
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서아이디)
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서아이디)
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명,부서아이디) %>%
dplyr::summarise(연봉평균=mean(연봉,na.rm=T))
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명,부서아이디,도시) %>%
dplyr::summarise(사원수=length(직원아이디),평균연봉=mean(연봉))
View(q)
q<-emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명,부서아이디,도시) %>%
dplyr::summarise(사원수=length(직원아이디),평균연봉=mean(연봉))
View(q)
q<-emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명,도시) %>%
dplyr::summarise(사원수=length(직원아이디),평균연봉=mean(연봉))
View(q)
q<-emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명,도시) %>%
dplyr::summarise(사원수=length(직원아이디),평균연봉=sprintf('%0.2f만원',mean(연봉))
View(q)
q<-emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::left_join(loc,by='위치아이디') %>%
dplyr::group_by(부서명,도시) %>%
dplyr::summarise(사원수=length(직원아이디),평균연봉=sprintf('%0.2f만원',mean(연봉)))
View(q)
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서아이디,부서명) %>%
dplyr::summarise(최대연봉=max(연봉))
View(emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서아이디,부서명) %>%
dplyr::summarise(최대연봉=max(연봉)))
View(emp)
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),이름,연봉,'부서아이디 없음')
emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서아이디,부서명) %>%
dplyr::summarise(최대연봉=max(연봉))
View
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),이름,연봉,'부서아이디 없음')
q<-emp %>%
dplyr::left_join(dep,by='부서아이디') %>%
dplyr::group_by(부서아이디,부서명) %>%
dplyr::summarise(최대연봉=max(연봉))
View(q)
install.packages("stringr")
install.packages("stringr")
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),이름,연봉,'부서아이디 없음')
library(stringr)
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),이름,연봉,'부서아이디 없음')
test <- c('apple','banana','cherry','Apple','Pineapple',NA)
ifelse(stringr::str_detect(test,'A'),'Good','Bad')
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),'부서아이디 없음')
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),'부서아이디 없음',NA)
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),'부서아이디 없음','NA')
emp %>%
ifelse(stringr::str_detect(부서아이디,NA),'부서아이디 없음','신입아님')
emp %>%
select(부서아이디)
emp %>%
select(부서아이디)
emp %>%
select(부서아이디)
emp %>%
dplyr::select(부서아이디)
emp %>%
dplyr::select(is.na(부서아이디))
emp %>%
is.na(dplyr::select(부서아이디))
is.na(emp %>%
(dplyr::select(부서아이디))
is.na(emp %>%
(dplyr::select(부서아이디))
is.na(emp%>% dplyr::select(부서아이디))
emp %>%
dplyr::filter(is.na(emp$부서아이디)) %>%
dplyr::select(이름,연봉,부서아이디)
emp %>%
dplyr::filter(is.na(emp$부서아이디)) %>%
dplyr::select(이름,연봉,부서아이디)
## 문제 24. 직원중에서 이름에 대문자 S 와 T
## 가 포함된 직원을 출력하시오.
ifelse(stringr::str_detect(emp$이름,'S'&'T'),'Y','N')
ifelse(stringr::str_detect(emp$이름,'S'),'Y','N')
emp %>%
dplyr::filter(ifelse(stringr::str_detect(emp$이름,'S'),'Y','N')=='Y') %>%
emp %>%
dplyr::filter(ifelse(stringr::str_detect(emp$이름,'S'),'Y','N')=='Y')
emp %>%
dplyr::filter(ifelse(stringr::str_detect(emp$이름,'S'),'Y','N')=='Y')
emp %>%
dplyr::filter(ifelse(stringr::str_detect(emp$이름,'S'),'Y','N')=='Y' & ifelse(stringr::str_detect(emp$이름,'T'),'Y','N')=='Y') %>%
dplyr::select(이름)
emp %>%
dplyr::filter(ifelse(stringr::str_detect(emp$이름,'S'),'Y','N')=='Y' | ifelse(stringr::str_detect(emp$이름,'T'),'Y','N')=='Y') %>%
dplyr::select(이름)
emp %>%
dplyr::filter(ifelse(stringr::str_detect(emp$이름,'S'),'Y','N')=='Y' & ifelse(stringr::str_detect(emp$이름,'T'),'Y','N')=='Y') %>%
dplyr::select(이름)
emp %>%
dplyr::filter(str_detect(emp$이름,'S'),str_detect(emp$이름,'T')) %>%
dplyr::select(이름)
emp %>%
dplyr::filter(str_detect(emp$이름,'S'),str_detect(emp$이름,'T')) %>%
dplyr::select(이름)
보너스지급내역서 <- emp %>%
dplyr::filter(연봉<3000) %>%
dplyr::select(이름,직원아이디,연봉) %>%
dplyr::arrange(직원아이디) %>%
dplyr::mutate(보너스=sprintf("%0.0f 만원",연봉*0.01))
View(보너스지급내역서)
write.csv(보너스지급내역서,'보너스지금내역서.csv')
library(rJava)
library(DBI)
library(RJDBC)
library(XML)
library(memoise)
library(KoNLP)
library(wordcloud)
library(dplyr)
library(ggplot2)
library(ggmap)
library(rvest)
library(RColorBrewer)
library(data.table)
library(reshape)
library(stringr)
KoNLP::useSejongDic()
txt <- readLines('newsreport.txt')
getwd()
txt <- readline('newsreport.txt')
txt <- readline('newsreport.txt')
getwd()
KoNLP::useSejongDic()
txt <- readline('newsreport.txt')
print(txt)
View(txt)
txt <- readLines('newsreport.txt')
txt
txt
getwd()
KoNLP::useSejongDic()
txt <- readLines('newsreport.txt')
txt
getwd()
KoNLP::useSejongDic()
txt <- readLines('newsreport.txt')
txt
getwd()
KoNLP::useSejongDic()
txt <- readLines('newsreport.txt')
txt
getwd()
KoNLP::useSejongDic()
txt <- readLines('newsreport.txt')
place <- sapply(txt,extractNoun(),USE.NAMES = F)
place <- sapply(txt,extractNoun,USE.NAMES = F)
place
temp <- unlist(place)
temp
place <- Filter(function(x)(nchar()>=3),txt)
place <- Filter(function(x)(nchar(x)>=3),txt)
place
place <- Filter(function(x)(nchar(x)>=3),txt)
place <- gsub("이상","",place)
place
place
write(unlist(place))
test <- brewer.pal(9,"Set1")
wordcloud(names(table(place)),freq=table(place),scale=c(5,1),rot.per=0.25,min.freq=1,random.order=F,random.color=T,colors=palete)
write(unlist(place))
test <- brewer.pal(9,"Set1")
wordcloud(names(table(place)),freq=table(place),scale=c(5,1),rot.per=0.25,min.freq=1,random.order=F,random.color=T,colors=palete)
wordcloud(names(table(place)),freq=table(place),scale=c(5,1),rot.per=0.25,min.freq=1,random.order=F,random.color=T,colors=test)
warnings()
test <- brewer.pal(9,"Set1")
wordcloud(names(table(place)),freq=table(place),scale=c(5,1),rot.per=0.25,min.freq=1,random.order=F,random.color=T,colors=test)
txt <- str_replace_all(txt,"\\w","")
nouns <- KoNLP::extractNoun(txt)
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount,stringsAsFactors = F)
df_word <- rename(df_word,word=Var1,freq=Freq)
df_word <- rename(df_word,word=Var1,freq=Freq)
df_word <- rename(df_word,word=Var1,freq=Freq)
